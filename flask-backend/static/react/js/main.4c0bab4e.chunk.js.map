{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Generate","useState","data","setData","report","setReport","console","log","onClick","fetch","then","response","json","href","file","strnum","realnum","intgr","alphanum","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,I,MCiBf,SAASA,IAAW,IAAD,EACMC,mBAAS,IADf,mBACVC,EADU,KACLC,EADK,WAQUF,mBAAS,IARnB,mBAQVG,EARU,KAQHC,EARG,KAejB,OADAC,QAAQC,IAAI,kCAAkCL,GAE5C,qCACA,wBAAQM,QAfV,WACEC,MAAM,YACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAR,GAAI,OAAGC,EAAQD,OAYrB,sBACA,4BACA,oBAAGW,KAAK,YAAR,mCAA2CX,EAAKY,UAEhD,sBACA,wBAAQN,QAbV,WAEEH,EAAUH,EAAKE,SAWf,oBACC,sDAAyBA,EAAOW,UAChC,+CAAkBX,EAAOY,QAAzB,OACA,2CAAcZ,EAAOa,SACrB,gDAAmBb,EAAOc,eAMhBC,MA3Cf,WAAgB,IAAD,EACQlB,mBAAS,IADjB,mBAEb,OAFa,UAGX,mCACA,cAACD,EAAD,OCEWoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"js/main.4c0bab4e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"media/logo.6ce24c58.svg\";","import logo from './logo.svg';\n// import Generate from './Generate';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\n\nfunction App() {\n  const [gen,setGen] = useState({});\n  return (\n    <>\n    <Generate/>\n    </>\n  );\n}\n\n\n\nfunction Generate(){\n  const [data,setData] = useState({});\n  function randomizeFile(){\n    fetch('generate')\n    .then(response => response.json())\n    .then(data =>setData(data));\n  }\n\n  const [report,setReport] = useState({});\n  function showReport(){\n    // alert(\"report button clickec\");\n    setReport(data.report);\n\n  }\n  console.log(\"This is data from API generate \",data);\n  return(\n    <>\n    <button onClick = {randomizeFile}>Generate</button>\n    <p>\n    <a href=\"/download\">Download Link to file:{data.file }</a>\n    </p>\n    <p></p>\n    <button onClick = {showReport}>Report</button>\n     <p>Alphabetical String: {report.strnum}</p>\n     <p>Real Numbers: {report.realnum} </p>\n     <p>Integer:  {report.intgr}</p>\n     <p>Alphanumeric:  {report.alphanum}</p>\n    </>\n  )\n}\n\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}